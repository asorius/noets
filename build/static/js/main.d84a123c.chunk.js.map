{"version":3,"sources":["components/Note.js","components/NotesList.js","components/NewNote.js","actions/index.js","App.js","index.js"],"names":["Note","note","update","ondelete","content","important","id","useState","importance","changeImportance","onClick","NotesList","notes","filter","filteredList","el","map","key","NewNote","submit","setContent","onSubmit","e","type","onChange","target","value","getAllNotes","a","axios","get","req","data","response","addNote","post","console","log","setImportance","updatedNote","put","baseUrl","deleteNote","delete","App","setNotes","setFilter","useEffect","actions","then","className","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d84a123c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nexport default function Note({ note, update, ondelete }) {\r\n  const { content, important, id } = note;\r\n  const [importance, changeImportance] = useState(important);\r\n  let onclick = () => {\r\n    update(id);\r\n    changeImportance(!importance);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <p>{content}</p>\r\n      <button onClick={onclick}>\r\n        {importance ? 'unset important' : 'set important'}\r\n      </button>\r\n      <button onClick={() => ondelete(id)}>X</button>\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Note from './Note';\r\nexport default function NotesList({ notes, update, filter, ondelete }) {\r\n  const filteredList = notes.filter(el => el.important);\r\n  return (\r\n    <ul>\r\n      {filter\r\n        ? filteredList.map(el => (\r\n            <Note note={el} key={el.id} update={update}></Note>\r\n          ))\r\n        : notes.map(el => (\r\n            <Note\r\n              note={el}\r\n              key={el.id}\r\n              update={update}\r\n              ondelete={ondelete}\r\n            ></Note>\r\n          ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function NewNote({ submit }) {\r\n  const [content, setContent] = useState('');\r\n  let onchange = e => setContent(e.target.value);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        submit(e, content);\r\n        setContent('');\r\n      }}\r\n    >\r\n      <input type=\"text\" onChange={onchange} value={content}></input>\r\n      <button type=\"submit\">save</button>\r\n    </form>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nconst baseUrl = '/notes';\r\n\r\nconst getAllNotes = async () => {\r\n  const req = await axios.get(baseUrl);\r\n  const response = await req.data;\r\n  return response;\r\n};\r\nconst addNote = async content => {\r\n  try {\r\n    const req = await axios.post(baseUrl, { content });\r\n    const data = await req.data;\r\n    return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nconst setImportance = async (id, updatedNote) => {\r\n  try {\r\n    const req = await axios.put(baseUrl + '/' + id, updatedNote);\r\n    const data = await req.data;\r\n    return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nconst deleteNote = async id => {\r\n  try {\r\n    const req = await axios.delete(baseUrl + '/' + id);\r\n    const data = await req.data;\r\n    return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nexport default {\r\n  getAllNotes,\r\n  addNote,\r\n  setImportance,\r\n  deleteNote\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport NotesList from './components/NotesList';\nimport NewNote from './components/NewNote';\nimport actions from './actions';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [filter, setFilter] = useState(false);\n  useEffect(() => {\n    actions.getAllNotes().then(data => setNotes(data));\n  }, []);\n\n  const submit = (e, content) => {\n    e.preventDefault();\n    actions.addNote(content).then(data => setNotes([...notes, data]));\n  };\n  const updateImportance = id => {\n    actions\n      .setImportance(id)\n      .then(data => setNotes(notes.map(el => (el.id === data.id ? data : el))));\n  };\n  const filterImportance = () => {\n    setFilter(!filter);\n  };\n  const ondelete = id => {\n    actions.deleteNote(id);\n    setNotes(notes.filter(note => note.id !== id));\n    console.log(id);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n      <button onClick={filterImportance}>\n        {filter ? 'show all' : 'show important only'}\n      </button>\n      <NotesList\n        notes={notes}\n        update={updateImportance}\n        filter={filter}\n        ondelete={ondelete}\n      ></NotesList>\n      <NewNote submit={submit}></NewNote>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}