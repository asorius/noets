{"version":3,"sources":["components/Note.js","components/NotesList.js","components/NewNote.js","actions/index.js","App.js","index.js"],"names":["Note","note","update","content","important","id","useState","importance","changeImportance","onClick","NotesList","notes","filter","filteredList","el","map","key","NewNote","submit","setContent","onSubmit","e","type","onChange","target","value","getAllNotes","a","console","log","axios","get","req","data","response","addNote","post","setImportance","updatedNote","put","baseUrl","App","setNotes","setFilter","useEffect","actions","then","className","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"6LACe,SAASA,EAAT,GAAiC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OAC3BC,EAA2BF,EAA3BE,QAASC,EAAkBH,EAAlBG,UAAWC,EAAOJ,EAAPI,GADiB,EAENC,mBAASF,GAFH,mBAEtCG,EAFsC,KAE1BC,EAF0B,KAO7C,OACE,4BACE,2BAAIL,GACJ,4BAAQM,QAPE,WACZP,EAAOG,GACPG,GAAkBD,KAMbA,EAAa,kBAAoB,kBCV3B,SAASG,EAAT,GAA+C,IAA1BC,EAAyB,EAAzBA,MAAOT,EAAkB,EAAlBA,OAAQU,EAAU,EAAVA,OAC3CC,EAAeF,EAAMC,QAAO,SAAAE,GAAE,OAAIA,EAAGV,aAC3C,OACE,4BACGQ,EACGC,EAAaE,KAAI,SAAAD,GAAE,OACjB,kBAACd,EAAD,CAAMC,KAAMa,EAAIE,IAAKF,EAAGT,GAAIH,OAAQA,OAEtCS,EAAMI,KAAI,SAAAD,GAAE,OAAI,kBAACd,EAAD,CAAMC,KAAMa,EAAIE,IAAKF,EAAGT,GAAIH,OAAQA,QCR/C,SAASe,EAAT,GAA8B,IAAXC,EAAU,EAAVA,OAAU,EACZZ,mBAAS,IADG,mBACnCH,EADmC,KAC1BgB,EAD0B,KAI1C,OACE,0BACEC,SAAU,SAAAC,GACRH,EAAOG,EAAGlB,GACVgB,EAAW,MAGb,2BAAOG,KAAK,OAAOC,SATR,SAAAF,GAAC,OAAIF,EAAWE,EAAEG,OAAOC,QASGA,MAAOtB,IAC9C,4BAAQmB,KAAK,UAAb,S,2CCcS,GACbI,YA1Be,uCAAG,8BAAAC,EAAA,6DAClBC,QAAQC,IAAI,iBACZD,QAAQC,IAJM,UAEI,SAGAC,IAAMC,IALV,UAEI,cAGZC,EAHY,gBAIKA,EAAIC,KAJT,cAIZC,EAJY,yBAKXA,GALW,2CAAH,qDA2BfC,QApBW,uCAAG,WAAMhC,GAAN,iBAAAwB,EAAA,+EAEMG,IAAMM,KAXZ,SAW0B,CAAEjC,YAF5B,cAEN6B,EAFM,gBAGOA,EAAIC,KAHX,cAGNA,EAHM,yBAILA,GAJK,kCAMZL,QAAQC,IAAR,MANY,0DAAH,sDAqBXQ,cAZiB,uCAAG,WAAOhC,EAAIiC,GAAX,iBAAAX,EAAA,+EAEAG,IAAMS,IAAIC,UAAgBnC,EAAIiC,GAF9B,cAEZN,EAFY,gBAGCA,EAAIC,KAHL,cAGZA,EAHY,yBAIXA,GAJW,kCAMlBL,QAAQC,IAAR,MANkB,0DAAH,yDCmBJY,MAjCf,WAAgB,IAAD,EACanC,mBAAS,IADtB,mBACNK,EADM,KACC+B,EADD,OAEepC,oBAAS,GAFxB,mBAENM,EAFM,KAEE+B,EAFF,KAiBb,OAdAC,qBAAU,WACRC,EAAQnB,cAAcoB,MAAK,SAAAb,GAAI,OAAIS,EAAST,QAC3C,IAaD,yBAAKc,UAAU,OACb,qCACA,4BAAQtC,QANa,WACvBkC,GAAW/B,KAMNA,EAAS,WAAa,uBAEzB,kBAACF,EAAD,CACEC,MAAOA,EACPT,OAdmB,SAAAG,GACvBwC,EAAQR,cAAchC,GAAIyC,MAAK,SAAAb,GAAI,OAAIS,EAAS,YAAIT,QAchDrB,OAAQA,IAEV,kBAACK,EAAD,CAASC,OArBE,SAACG,EAAGlB,GACjBkB,EAAE2B,iBACFH,EAAQV,QAAQhC,GAAS2C,MAAK,SAAAb,GAAI,OAAIS,EAAS,GAAD,mBAAK/B,GAAL,CAAYsB,aCV9DgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f8481b88.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nexport default function Note({ note, update }) {\r\n  const { content, important, id } = note;\r\n  const [importance, changeImportance] = useState(important);\r\n  let onclick = () => {\r\n    update(id);\r\n    changeImportance(!importance);\r\n  };\r\n  return (\r\n    <li>\r\n      <p>{content}</p>\r\n      <button onClick={onclick}>\r\n        {importance ? 'unset important' : 'set important'}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Note from './Note';\r\nexport default function NotesList({ notes, update, filter }) {\r\n  const filteredList = notes.filter(el => el.important);\r\n  return (\r\n    <ul>\r\n      {filter\r\n        ? filteredList.map(el => (\r\n            <Note note={el} key={el.id} update={update}></Note>\r\n          ))\r\n        : notes.map(el => <Note note={el} key={el.id} update={update}></Note>)}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function NewNote({ submit }) {\r\n  const [content, setContent] = useState('');\r\n  let onchange = e => setContent(e.target.value);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        submit(e, content);\r\n        setContent('');\r\n      }}\r\n    >\r\n      <input type=\"text\" onChange={onchange} value={content}></input>\r\n      <button type=\"submit\">save</button>\r\n    </form>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nconst baseUrl = '/notes';\r\n\r\nconst getAllNotes = async () => {\r\n  console.log('get all notes');\r\n  console.log(baseUrl);\r\n  const req = await axios.get(baseUrl);\r\n  const response = await req.data;\r\n  return response;\r\n};\r\nconst addNote = async content => {\r\n  try {\r\n    const req = await axios.post(baseUrl, { content });\r\n    const data = await req.data;\r\n    return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nconst setImportance = async (id, updatedNote) => {\r\n  try {\r\n    const req = await axios.put(baseUrl + '/' + id, updatedNote);\r\n    const data = await req.data;\r\n    return data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nexport default {\r\n  getAllNotes,\r\n  addNote,\r\n  setImportance\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport NotesList from './components/NotesList';\nimport NewNote from './components/NewNote';\nimport actions from './actions';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [filter, setFilter] = useState(false);\n  useEffect(() => {\n    actions.getAllNotes().then(data => setNotes(data));\n  }, []);\n\n  const submit = (e, content) => {\n    e.preventDefault();\n    actions.addNote(content).then(data => setNotes([...notes, data]));\n  };\n  const updateImportance = id => {\n    actions.setImportance(id).then(data => setNotes([...data]));\n  };\n  const filterImportance = () => {\n    setFilter(!filter);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n      <button onClick={filterImportance}>\n        {filter ? 'show all' : 'show important only'}\n      </button>\n      <NotesList\n        notes={notes}\n        update={updateImportance}\n        filter={filter}\n      ></NotesList>\n      <NewNote submit={submit}></NewNote>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}